{"version":3,"sources":["container/firebase.js","components/Post.jsx","components/Contacts.jsx","components/SimpleForm.jsx","container/App.js","reportWebVitals.js","index.js"],"names":["fireDb","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","Post","database","ref","props","unsubscribeFromSnapshot","steps","consent","fullname","emailcaptura","document","cpf","cnpj","cep","logradouro","bairro","localidade","uf","number","state","collection","onSnapshot","snapshot","docs","map","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","userObject","this","axios","post","then","res","status","catch","error","className","type","value","Component","Contacts","useState","setContactObjects","useEffect","child","on","val","addOrEdit","obj","push","theme","background","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","config","width","height","floating","hideUserAvatar","placeholder","headerTitle","SimpleForm","values","setValues","handleInputChange","e","target","name","onSubmit","preventDefault","trigger","options","label","user","validator","test","onchange","length","trim","replace","split","v1","v2","aux","i","p","p1","p2","end","component","asMessage","Header","currentUser","onClick","signOut","alt","to","App","unsubscribeFromAuth","onAuthStateChanged","snapShot","setState","href","rel","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dea2182b.chunk.js","sourcesContent":["//---- database\r\n//import  firebase from 'firebase/app';\r\nimport React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCBhkG3FMQ42Mz3ZXc9IlNfsjSxrHKp3ho\",\r\n  authDomain: \"testepraticohellper.firebaseapp.com\",\r\n  databaseURL: \"https://testepraticohellper-default-rtdb.firebaseio.com\",\r\n  projectId: \"testepraticohellper\",\r\n  storageBucket: \"testepraticohellper.appspot.com\",\r\n  messagingSenderId: \"416506166334\",\r\n  appId: \"1:416506166334:web:cc6ebe80cb65878e2ca56f\",\r\n  measurementId: \"G-52TSMT6QT6\"\r\n};\r\nvar fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n  \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  \r\n    const snapShot = await userRef.get();\r\n  \r\n    if (!snapShot.exists) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n  \r\n    return userRef;\r\n  };\r\n\r\n  export const addCollectionAndDocuments = async (\r\n    collectionKey,\r\n    objectsToAdd\r\n  ) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n  \r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc();\r\n      batch.set(newDocRef, obj);\r\n    });\r\n  \r\n    return await batch.commit();\r\n  };\r\n\r\n  export const convertCollectionsSnapshotToMap = collections => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n      const { displayName, email} = doc.data();\r\n  \r\n      return {\r\n        routeName: encodeURI(displayName.toLowerCase()),\r\n        id: doc.id,\r\n        displayName,\r\n        email\r\n      };\r\n    });\r\n  \r\n    return transformedCollection.reduce((accumulator, collection) => {\r\n      accumulator[collection.displayName.toLowerCase()] = collection;\r\n      return accumulator;\r\n    }, {});\r\n  };\r\n\r\n  export const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n      const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n        unsubscribe();\r\n        resolve(userAuth);\r\n      }, reject);\r\n    });\r\n  };\r\n\r\nexport default fireDb.database().ref();","import React, { Component, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { auth, createUserProfileDocument } from '../container/firebase';\r\nimport { convertCollectionsSnapshotToMap } from '../container/firebase';\r\nimport { firestore } from '../container/firebase';\r\n//import SimpleForm from './SimpleForm';\r\nimport firebaseDb from '../container/firebase';\r\n\r\n\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { steps } = this.props;\r\n        const { consent, fullname, emailcaptura, document, cpf = 0, cnpj = 0, cep, logradouro, bairro, localidade,\r\n            uf, number } = steps;\r\n\r\n        this.state = {\r\n\r\n            consent:'', fullname:'', emailcaptura:'', document:'', cpf:'',\r\n            cnpj:'', cep:'', logradouro:'', bairro:'',localidade:'',number:''\r\n        };\r\n\r\n    }\r\n  \r\n   \r\n\r\n    unsubscribeFromSnapshot = null;\r\n    componentDidMount() {\r\n        const collectionRef = firestore.collection('users');\r\n\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            convertCollectionsSnapshotToMap(snapshot);\r\n        })\r\n\r\n        const userObject =  {\r\n\r\n            consent: this.state.consent,\r\n            fullname: this.state.fullname,\r\n            emailcaptura: this.state.emailcaptura,\r\n            document: this.state.document,\r\n            cpf: this.state.cpf,\r\n            cnpj: this.state.cnpj,\r\n            cep: this.state.cep,\r\n            logradouro: this.state.logradouro,\r\n            bairro: this.state.bairro,\r\n            localidade: this.state.localidade,\r\n            uf: this.state.uf,\r\n            number: this.state.number,\r\n\r\n        };\r\n        \r\n\r\n\r\n        axios.post(`/api`, userObject)\r\n            .then(res => {\r\n                console.log(res.status)\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>Obrigado! Seus dados foram enviados com sucesso!</div>\r\n                <section className=\"center2\">\r\n                    <section >\r\n                        <input type=\"submit\" value='SALVAR' className='customButton2' />\r\n                    </section>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default Post;\r\n\r\n\r\n","import React, { Component, useEffect, useState } from 'react';\r\nimport SimpleForm from './SimpleForm';\r\nimport firebaseDb from '../container/firebase';\r\nimport firebase from 'firebase';\r\n\r\nconst Contacts = () => {\r\n\r\n    var [contactObjects, setContactObjects] = useState({})\r\n\r\n    useEffect(()=>{\r\n        firebase.database().ref().child('contacts').on('value', snapshot =>{\r\n            \r\n            if(snapshot.val() != null)\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                })    \r\n        })\r\n    },[])\r\n    \r\n    const addOrEdit = obj =>{\r\n        firebase.database().ref().child('contacts').push(\r\n            obj,\r\n            error =>{\r\n            if(error)console.log(error);\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className='jumbo'>\r\n                <div className='container'>\r\n                    <h1 className=\"display\">Contatos Cadastrados</h1>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-md-5'>\r\n                    <SimpleForm addOrEdit={addOrEdit}/>\r\n                </div>\r\n                <div className='col-md-7'>\r\n                    <div className='list'>Lista de Contatos</div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Contacts;","import React, { Component, useState, useEffect } from 'react';\r\nimport ChatBot from 'react-simple-chatbot';\r\nimport { ThemeConsumer, ThemeProvider } from 'styled-components';\r\nimport Post from './Post';\r\nimport './style.scss';\r\nimport Contacts from './Contacts';\r\n\r\n\r\nconst theme = {\r\n    background: '#f5f8fb',\r\n    headerBgColor: '#14A939',\r\n    headerFontColor: '#fff',\r\n    headerFontSize: '15px',\r\n    botBubbleColor: '#fff',\r\n    botFontColor: '#000',\r\n    userBubbleColor: '#14A939',\r\n    userFontColor: '#fff',\r\n};\r\n\r\nconst config = {\r\n    width: \"400px\",\r\n    height: \"500px\",\r\n    floating: true,\r\n    hideUserAvatar: true,\r\n    placeholder: 'Escreva aqui.',\r\n    headerTitle: \"Formulário de cadastro Helpper\"\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst SimpleForm = (props) => {\r\n    const initialFieldValues ={\r\n        consent: '',\r\n        fullname: '',\r\n        emailcaptura: '',\r\n        document: '',\r\n        cpf: '',\r\n        cnpj: '',\r\n        cep: '',\r\n        logradouro: '',\r\n        bairro: '',\r\n        localidade: '',\r\n        uf: '',\r\n        number: ''\r\n\r\n    }\r\n    \r\n\r\n    var [values, setValues]  = useState (initialFieldValues)\r\n  \r\n    const handleInputChange = e => {\r\n        var {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        \r\n    }\r\n\r\n    const handleFormSubmit = e =>{\r\n        e.preventDefault();\r\n        props.addOrEdit(values);\r\n    }\r\n        return (\r\n\r\n            <>\r\n                <form >\r\n                    \r\n                    <ThemeProvider theme={theme}>\r\n                        <ChatBot onSubmit={handleFormSubmit}\r\n                            steps={[\r\n                                {\r\n                                    id: 'welcome',\r\n                                    message: 'Olá, sou a assitente virtual Helpper',\r\n                                    trigger: '1',\r\n                                },\r\n                                {\r\n                                    id: '1',\r\n                                    message: 'Antes de começarmos, você concorda com os Termos de Uso, Politíca de Privacidade, e Gerencie seus Cookies',\r\n                                    trigger: 'consent',\r\n                                },\r\n                                {\r\n                                    id: 'consent',\r\n                                    options: [\r\n                                        { value: '1', label: 'Sim', trigger: 'q-fullname' },\r\n                                        { value: '0', label: 'Não', trigger: 'no-consent' },\r\n                                    ],\r\n                                },\r\n                                {\r\n                                    id: 'no-consent',\r\n                                    message: \"Que pena, não poderemos prosseguir com o seu cadastro.\",\r\n                                    trigger: 'reload',\r\n                                },\r\n                                {\r\n                                    id: 'reload',\r\n                                    options: [\r\n                                        { value: 'reload', label: 'Por favor me pergunte novamente', trigger: '1' },\r\n                                    ]\r\n                                },\r\n\r\n                                {\r\n                                    id: 'q-fullname',\r\n                                    message: 'Qual é seu nome completo?',\r\n                                    trigger: 'fullname'\r\n                                    \r\n                                },\r\n                                {\r\n                                    id: 'fullname',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        if (/^[A-Za-z0-9]+$/.test(value)) {\r\n                                     \r\n                                            return 'Por favor apenas letras, seu nome e sobrenome';\r\n                                        }\r\n                                        else {\r\n                                                   \r\n                                    onchange = {handleInputChange};\r\n                                    value = values.fullname;\r\n                                            return true;\r\n                                        }\r\n                                        \r\n                                    },\r\n                                    trigger: 'q-email'\r\n                                },\r\n\r\n                                {\r\n                                    id: 'q-email',\r\n                                    message: 'Olá, {previousValue}. Qual é o seu email para cadastro?',\r\n                                    trigger: 'emailcaptura'\r\n                                    \r\n                                },\r\n                                {\r\n                                    id: 'emailcaptura',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        \r\n                                        if (/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(value)) {\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.emailcaptura;\r\n                                            return true;\r\n                                        }\r\n                                        else {\r\n                                            return 'Coloque um e-mail valido.';\r\n                                        }\r\n                                    },\r\n                                    \r\n                                    trigger: 'q-document'\r\n                                },\r\n\r\n                                {\r\n                                    id: 'q-document',\r\n                                    message: 'Qual o seu tipo de documento?',\r\n                                    trigger: 'document',\r\n                                },\r\n                                {\r\n                                    id: 'document',\r\n                                    options: [\r\n                                        { value: 'CPF', label: 'CPF', trigger: 'q-cpf' },\r\n                                        { value: 'CNPJ', label: 'CNPJ', trigger: 'q-cnpj' },\r\n\r\n                                    ]\r\n                                },\r\n\r\n                                //-------cpf\r\n                                {\r\n                                    id: 'q-cpf',\r\n                                    message: 'Qual o numero do seu CPF?' + 'Por favor digite sem pontos e traços',\r\n                                    trigger: 'cpf',\r\n                                },\r\n                                {\r\n                                    id: 'cpf',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        \r\n                                        if (value.length == 11) {\r\n                                            var cpf = value.trim();\r\n\r\n                                            cpf = cpf.replace(/\\./g, '');\r\n                                            cpf = cpf.replace('-', '');\r\n                                            cpf = cpf.split('');\r\n\r\n                                            var v1 = 0;\r\n                                            var v2 = 0;\r\n                                            var aux = false;\r\n\r\n                                            for (var i = 1; cpf.length > i; i++) {\r\n                                                if (cpf[i - 1] != cpf[i]) {\r\n                                                    aux = true;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (aux == false) {\r\n                                                return 'CPF inválido';\r\n                                            }\r\n\r\n                                            for (var i = 0, p = 10; (cpf.length - 2) > i; i++, p--) {\r\n                                                v1 += cpf[i] * p;\r\n                                            }\r\n\r\n                                            v1 = ((v1 * 10) % 11);\r\n\r\n                                            if (v1 == 10) {\r\n                                                v1 = 0;\r\n                                            }\r\n\r\n                                            if (v1 != cpf[9]) {\r\n                                                return 'CPF inválido';\r\n                                            }\r\n\r\n                                            for (var i = 0, p = 11; (cpf.length - 1) > i; i++, p--) {\r\n                                                v2 += cpf[i] * p;\r\n                                            }\r\n\r\n                                            v2 = ((v2 * 10) % 11);\r\n\r\n                                            if (v2 == 10) {\r\n                                                v2 = 0;\r\n                                            }\r\n\r\n                                            if (v2 != cpf[10]) {\r\n                                                return 'CPF inválido';\r\n                                            } else {                                                \r\n                                                return true;\r\n                                            }\r\n                                        } else {\r\n                                            return 'CPF deve conter 11 números';\r\n                                        }\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.cpf;  \r\n                                    },\r\n                                    trigger: 'q-cep'\r\n\r\n                                },\r\n                                //-------cnpj\r\n                                {\r\n                                    id: 'q-cnpj',\r\n                                    message: 'Qual o numero do seu CNPJ?' + 'Por favor digite sem pontos e traços',\r\n                                    trigger: 'cnpj',\r\n                                },\r\n                                {\r\n                                    id: 'cnpj',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                       \r\n                                        if (value.length == 14) {\r\n                                            var cnpj = value.trim();\r\n\r\n                                            cnpj = cnpj.replace(/\\./g, '');\r\n                                            cnpj = cnpj.replace('-', '');\r\n                                            cnpj = cnpj.replace('/', '');\r\n                                            cnpj = cnpj.split('');\r\n\r\n                                            var v1 = 0;\r\n                                            var v2 = 0;\r\n                                            var aux = false;\r\n\r\n                                            for (var i = 1; cnpj.length > i; i++) {\r\n                                                if (cnpj[i - 1] != cnpj[i]) {\r\n                                                    aux = true;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (aux == false) {\r\n                                                return 'CNPJ inválido';\r\n                                            }\r\n\r\n                                            for (var i = 0, p1 = 5, p2 = 13; (cnpj.length - 2) > i; i++, p1--, p2--) {\r\n                                                if (p1 >= 2) {\r\n                                                    v1 += cnpj[i] * p1;\r\n                                                } else {\r\n                                                    v1 += cnpj[i] * p2;\r\n                                                }\r\n                                            }\r\n\r\n                                            v1 = (v1 % 11);\r\n\r\n                                            if (v1 < 2) {\r\n                                                v1 = 0;\r\n                                            } else {\r\n                                                v1 = (11 - v1);\r\n                                            }\r\n\r\n                                            if (v1 != cnpj[12]) {\r\n                                                return 'CNPJ inválido';\r\n                                            }\r\n\r\n                                            for (var i = 0, p1 = 6, p2 = 14; (cnpj.length - 1) > i; i++, p1--, p2--) {\r\n                                                if (p1 >= 2) {\r\n                                                    v2 += cnpj[i] * p1;\r\n                                                } else {\r\n                                                    v2 += cnpj[i] * p2;\r\n                                                }\r\n                                            }\r\n\r\n                                            v2 = (v2 % 11);\r\n\r\n                                            if (v2 < 2) {\r\n                                                v2 = 0;\r\n                                            } else {\r\n                                                v2 = (11 - v2);\r\n                                            }\r\n\r\n                                            if (v2 != cnpj[13]) {\r\n                                                return 'CNPJ inválido';\r\n                                            } else {\r\n                                                return true;\r\n                                            }\r\n                                        } else {\r\n                                            return 'CNPJ deve conter 14 números';\r\n                                        }\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.cpf;\r\n                                    },\r\n                                    trigger: 'q-cep'\r\n\r\n                                },\r\n\r\n                                {\r\n                                    id: 'q-cep',\r\n                                    message: 'Estamos quase acabando. Digite o seu CEP neste formato:' + \" \" +\r\n                                        \"12345-678\",\r\n                                    trigger: 'cep',\r\n                                },\r\n                                {\r\n                                    id: 'cep',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                       \r\n                                        if (/^[0-9]{5}(?:-[0-9]{3})?$/.test(value) == false) {\r\n                                            return 'Por favor digite um CEP valido';\r\n                                        }\r\n                                        else {\r\n                                            onchange = {handleInputChange};\r\n                                            value = values.cpf;\r\n                                            return true;\r\n                                        }\r\n                                    },\r\n                                    trigger: 'q-logradouro'\r\n                                },\r\n\r\n\r\n                                //---------logradouro\r\n\r\n                                {\r\n                                    id: 'q-logradouro',\r\n                                    message: 'Qual o nome da sua rua?',\r\n                                    trigger: 'logradouro',\r\n                                },\r\n                                {\r\n                                    id: 'logradouro',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.logradouro;\r\n                                        return true;\r\n                                    },\r\n                                    trigger: 'q-number'\r\n                                },\r\n                                //--------number\r\n                                {\r\n                                    id: 'q-number',\r\n                                    message: 'Qual o número da sua residência?',\r\n                                    trigger: 'number',\r\n                                  \r\n                                },\r\n                                {\r\n                                    id: 'number',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.number;\r\n                                        return true;\r\n                                    },\r\n                                    trigger: 'q-bairro'\r\n                                },\r\n\r\n                                //---------Bairro\r\n\r\n                                {\r\n                                    id: 'q-bairro',\r\n                                    message: 'Seu Bairro?',\r\n                                    trigger: 'bairro',\r\n                                },\r\n                                {\r\n                                    id: 'bairro',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.bairro;\r\n                                        return true;\r\n                                    },\r\n                                    trigger: 'q-city'\r\n                                },\r\n                                //---------Cidade\r\n\r\n                                {\r\n                                    id: 'q-city',\r\n                                    message: 'Cidade em que mora?',\r\n                                    trigger: 'localidade',\r\n                                },\r\n                                {\r\n                                    id: 'localidade',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.localidade;\r\n                                        return true;\r\n                                    },\r\n                                    trigger: 'q-states'\r\n                                },\r\n                                //---------estado\r\n\r\n                                {\r\n                                    id: 'q-states',\r\n                                    message: 'Estado? Apenas a sigla '+\r\n                                             'Ex: SP para São Paulo',\r\n                                    trigger: 'uf',\r\n                                },\r\n                                {\r\n                                    id: 'uf',\r\n                                    user: true,\r\n                                    validator: (value) => {\r\n                                        onchange = {handleInputChange};\r\n                                        value = values.uf;\r\n                                        return true;\r\n                                    },\r\n                                    trigger: 'q-submit'\r\n                                },\r\n                                //---------submit\r\n\r\n                                {\r\n                                    id: 'q-submit',\r\n                                    message: 'Prosseguir para o Envio dos seus dados?',\r\n                                    trigger: 'submit'\r\n                                },\r\n                                {\r\n                                    id: 'submit',\r\n                                    options: [\r\n                                        { value: 'submit', label: 'Yes', trigger: 'end-message' },\r\n                                        { value: 'no', label: 'No', trigger: 'no-submit' },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    id: 'no-submit',\r\n                                    message: 'Suas informações não foram enviadas',\r\n                                    end: true,\r\n                                },\r\n                                {\r\n                                    id: 'end-message',\r\n                                    component: <Post />,\r\n                                    \r\n                                    asMessage: true,\r\n                                    end: true,\r\n                                },\r\n                            ]}\r\n\r\n                            {...config}\r\n                        />\r\n                          \r\n                    </ThemeProvider>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\nexport default SimpleForm;","// Em breve farei uma versão com redux eos seguintes\n// redux, users, firebase, cards, directory e o projeto será ampliado para e-commerce\n//Este é apenas um modelo de formulário para um testePrático de um programa de estágio\n\nimport './App.scss';\nimport React, { Component, useEffect } from 'react';\n//---- database\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n//----hooks\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useColletionData } from 'react-firebase-hooks/firestore';\nimport SimpleForm from '../components/SimpleForm';\nimport {auth} from './firebase';\nimport {firestore} from './firebase';\nimport {signInWithGoogle} from './firebase';\nimport {createUserProfileDocument} from './firebase';\nimport {addCollectionAndDocuments} from './firebase';\nimport {convertCollectionsSnapshotToMap} from './firebase';\nimport {getCurrentUser} from './firebase';\nimport Post from '../components/Post';\nimport Contacts from '../components/Contacts';\nimport firebaseDb from './firebase';\nimport addOrEdit from '../components/Contacts';\n\n\nconst Header = ({ currentUser }) => (\n \n\n  <div className='header'>\n\n    {currentUser ? (\n      <div className='option'>\n        <div id='signOut' className='option' onClick={() => auth.signOut()} alt=\"sair do google\">\n          SAIR DA CONTA GOOGLE\n             </div>\n        <section>\n          <SimpleForm addOrEdit={addOrEdit}/>\n        </section>\n      </div>\n    ) : (\n        <>\n          <div >\n            <div className='login' to='/signin' >\n              FAÇA O LOGIN PARA PREENCHER O FORMULÁRIO\n        </div>\n          </div>\n          <section className=\"center\">\n            <section >\n              <button className='customButton' onClick={signInWithGoogle} alt=\"Botão entrar com o google\">Entre com o Google</button>\n            </section>\n          </section>\n        </>\n      )}\n  </div>\n  \n);\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null,\n    };\n\n  \n\n\n\n  }\n\n\n  \n  unsubscribeFromAuth = null;\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          })\n        });\n      } else {\n        this.setState({ currentUser: userAuth });\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header currentUser={this.state.currentUser} />\n        <div className='App-header'>\n          <a\n            className=\"App-link\"\n            href=\"https://helpper.com.br/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <section className=\"logo\" alt=\"logo\" />\n          </a>\n          <div ></div>\n          <section className=\"info\" alt=\"advertência\">\n            Por favor, Não use suas informações pessoais para fazer o teste do ChatBot formulário,\n        <br /> ex: nome, rua, numero\n      </section>\n        </div>\n      </div>\n    );\n  }\n} export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}